plugins {
    alias(libs.plugins.android.application)
    alias(libs.plugins.dagger.hilt)
    alias(libs.plugins.jetbrains.kotlin.android)
    alias(libs.plugins.jetbrains.kotlin.serialization)
    alias(libs.plugins.kapt)
    id 'kotlin-parcelize'
    id 'androidx.navigation.safeargs.kotlin'
    alias(libs.plugins.realm.kotlin)
}

def javaVersion = JavaVersion.VERSION_17
def enableLeakCanary = false

android {

    namespace 'com.infomaniak.mail'

    compileSdk 34

    defaultConfig {
        applicationId 'com.infomaniak.mail'
        minSdk 25
        targetSdk 34
        versionCode 1_01_001_01
        versionName '1.1.1'
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'

        setProperty "archivesBaseName", "infomaniak-mail-$versionName ($versionCode)"

        buildConfigField 'String', 'CLIENT_ID', '"E90BC22D-67A8-452C-BE93-28DA33588CA4"'
        buildConfigField 'String', 'CREATE_ACCOUNT_URL', '"https://welcome.infomaniak.com/signup/ikmail?app=true"'
        buildConfigField 'String', 'CREATE_ACCOUNT_SUCCESS_HOST', '"mail.infomaniak.com"'
        buildConfigField 'String', 'CREATE_ACCOUNT_CANCEL_HOST', '"welcome.infomaniak.com"'
        buildConfigField 'String', 'IMPORT_EMAILS_URL', '"https://import-email.infomaniak.com"'
        buildConfigField 'String', 'INFOMANIAK_API_V1', '"https://api.infomaniak.com/1"'
        buildConfigField 'String', 'MAIL_API', '"https://mail.infomaniak.com"'
        // buildConfigField 'String', 'MAIL_API_PREPROD', '"https://mail.preprod.dev.infomaniak.ch"'
        buildConfigField 'String', 'SHOP_URL', '"https://ik.me"'
        buildConfigField 'String', 'CHATBOT_URL', '"https://www.infomaniak.com/chatbot"'

        buildConfigField 'String', 'BUGTRACKER_MAIL_BUCKET_ID', '"app_mail"'
        buildConfigField 'String', 'BUGTRACKER_MAIL_PROJECT_NAME', '"mail"'
        buildConfigField 'String', 'GITHUB_REPO', '"android-mail"'

        resValue 'string', 'ATTACHMENTS_AUTHORITY', 'com.infomaniak.mail.attachments'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility javaVersion
        targetCompatibility javaVersion
    }

    kotlinOptions { jvmTarget = javaVersion }

    buildFeatures { viewBinding true }

    androidResources { generateLocaleConfig true }

    flavorDimensions += 'distribution'

    productFlavors {
        standard {
            dimension 'distribution'
            apply plugin: 'com.google.gms.google-services'
            getIsDefault().set(true)
        }
        fdroid { dimension 'distribution' }
    }
}

dependencies {
    implementation project(path: ':Core')
    implementation project(path: ':Core:AppLock')
    implementation project(path: ':Core:BugTracker')
    implementation project(path: ':Core:Confetti')
    implementation project(path: ':Core:Stores')
    implementation project(path: ':HtmlCleaner')

    implementation libs.realm.kotlin.base

    standardImplementation libs.firebase.messaging.ktx

    implementation libs.lottie
    implementation libs.dragdropswipe.recyclerview
    implementation libs.dotsindicator

    implementation libs.flexbox
    implementation libs.lifecycle.process
    implementation libs.webkit
    implementation libs.work.concurrent.futures
    implementation libs.work.runtime.ktx

    implementation libs.hilt.android
    implementation libs.hilt.work
    // TODO: Migrate to KSP, actually Hilt is not yet supported with KSP
    // https://kotlinlang.org/docs/ksp-overview.html#supported-libraries
    // https://github.com/google/dagger/issues/2349
    kapt libs.hilt.compiler
    kapt libs.hilt.compiler.androidx

    implementation libs.sentry.android.fragment

    // Test
    androidTestImplementation libs.test.runner
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testRuntimeOnly libs.junit.jupiter.engine

    // Debug
    if (enableLeakCanary) debugImplementation libs.leakcanary.android
}
